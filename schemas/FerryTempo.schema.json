{
	"$defs": {
		"singleBoatData": {
			"title": "Ferry Tempo Single Boat Data",
			"description": "Data schema for any given boat from the Ferry Tempo API",
			"type": "object",
			"properties": {
				"ArrivalTimeMinus": {
					"description": "Seconds until arrival at destination port.",
					"type": "number"
				},
				"ArrivedDock": {
					"description": "Time of boat arrival at dock.",
					"type": "integer"
				},
				"ArrivingTerminalAbbrev": {
					"description": "WSF Vessel API pass-through: The abbreviated terminal name that represent's the vessel's next destination. Might not be present if the next scheduled destination is still being determined.",
					"type": "string"
				},
				"ArrivingTerminalName": {
					"description": "WSF Vessel API pass-through: The name of the terminal that represents the vessel's next destination. Might not be present if the next scheduled destination is still being determined.",
					"type": "string"
				},
				"AtDock": {
					"description": "WSF Vessel API pass-through: Indicates whether or not the vessel is docked",
					"type": "bool"
				},
				"DepartingTerminalAbbrev": {
					"description": "WSF Vessel API pass-through: The abbreviated terminal name where this vessel is docked or was last docked",
					"type": "string"
				},
				"DepartingTerminalName": {
					"description": "WSF Vessel API pass-through: The name of the terminal where this vessel is docked or was last docked",
					"type": "string"
				},
				"DepartureDelay": {
					"description": "Seconds delayed beyond scheduled departure.",
					"type": "number"
				},
				"DepartureDelayAverage": {
					"description": "A particular boat's average delay in seconds for the day.",
					"type": "number"
				},
				"Direction": {
					"description": "Conveys travel towards one port or the other.",
					"type": "string"
				},
				"EstimatedArrivalTime": {
					"description": "WSF Vessel API pass-through: The estimated date and time that the vessel will arrive at its destination. This value is not present when docked.",
					"type": "integer"
				},
				"Heading": {
					"description": "WSF Vessel API pass-through: The heading of the vessel (in degrees).",
					"type": "number"
				},
				"InService": {
					"description": "WSF Vessel API pass-through: Indicates whether or not the vessel is in service.",
					"type": "bool"
				},
				"LeftDock": {
					"description": "WSF Vessel API pass-through: The date and time that the vessel last left the dock. This value is not present when docked.",
					"type": "integer"
				},
				"OnDuty": {
					"description": "Conveys if a boat is truly in service.",
					"type": "bool"
				},
				"Progress": {
					"description": "Vessel crossing progress percentage.",
					"type": "number"
				},
				"ScheduledDeparture": {
					"description": "WSF Vessel API pass-through: The date and time when this vessel was or is scheduled to leave its departing terminal. Might not be present if the next scheduled destination is still being determined.",
					"type": "integer"
				},
				"Speed": {
					"description": "WSF Vessel API pass-through: The speed of the vessel (in Knots).",
					"type": "number"
				},
				"StopTimer": {
					"description": "Seconds in port since docked.",
					"type": "number"
				},
				"VesselName": {
					"description": "WSF Vessel API pass-through: The name of the vessel.",
					"type": "string"
				},
				"VesselPosition": {
					"description": "Although WSF provides 'VesselPositionNum', it may switch between boats throughout the day. Therefore, it may make sense to assign our own via the unique vessel IDs, say whichever is a lower value.",
					"type": "int"
				},
				"VesselPositionNum": {
					"description": "WSF Vessel API pass-through: For a given route, the number used to identify the scheduled departures being serviced by this vessel. Not present if vessel is not in service.",
					"type": "int"
				}
			},
			"required": [
				"ArrivalTimeMinus",
				"ArrivedDock",
				"AtDock",
				"DepartingTerminalAbbrev",
				"DepartingTerminalName",
				"DepartureDelay",
				"DepartureDelayAverage",
				"Direction",
				"EstimatedArrivalTime",
				"Heading",
				"InService",
				"LeftDock",
				"OnDuty",
				"Progress",
				"Speed",
				"StopTimer",
				"VesselName",
				"VesselPosition",
				"VesselPositionNum"
			]
		},
		"singlePortData": {
			"title": "Ferry Tempo Single Port Data",
			"description": "Data schema for any given port from the Ferry Tempo API",
			"type": "object",
			"properties": {
				"BoatAtDock": {
					"description": "Indicates if an in-service vessel is in port.",
					"type": "boolean"
				},
				"BoatAtDockName": {},
				"NextScheduledSailing": {
					"description": "Date/time in epoch format of next scheduled departure from the port. Returns null if port has no scheduled sailing.",
					"type": [
						"integer",
						"null"
					],
					"$ref": "#/$defs/epochTime"
				},
				"PortArrivalTimeMinus": {},
				"PortDepartureDelay": {
					"description": "Average delay in seconds of boats departing port for current sailing day.  Resets at 00:00 each day.",
					"type": "integer",
					"minimum": 0,
					"maximum": 32768
				},
				"PortDepartureDelayAverage": {},
				"PortETA": {
					"description": "Date/time in epoch format of arrival of the next boat.",
					"type": [
						"integer",
						"null"
					],
					"$ref": "#/$defs/epochTime"
				},
				"PortEstimatedArrivalTime": {},
				"PortLastArrived": {},
				"PortStopTimer": {},
				"TerminalAbbrev": {
					"description": "The abbreviated port/terminal name.",
					"type": "string"
				},
				"TerminalName": {
					"description": "The name of the port/terminal.",
					"type": "string"
				}
			},
			"required": [
				"BoatAtDock",
				"NextScheduledSailing",
				"PortDepartureDelay",
				"PortETA",
				"TerminalAbbrev",
				"TerminalName"
			]
		}
	},
	"$id": "https://www.ferrytempo.com/schemas/FerryTempo.schema.json",
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"description": "Data schema for any given route from the Ferry Tempo API",
	"properties": {
		"boatData": {
			"title": "Ferry Tempo Route Boat(s) Data",
			"type": "object",
			"description": "An object representing all boats for a given route.",
			"properties": {
				"boat1": {
					"$ref": "#/$defs/singleBoatData"
				},
				"boat2": {
					"$ref": "#/$defs/singleBoatData"
				}
			},
			"required": [
				"boat1",
				"boat2"
			]
		},
		"portData": {
			"title": "Ferry Tempo Route Ports Data",
			"type": "object",
			"description": "An object representing the ports for a given route.",
			"properties": {
				"portWN": {
					"$ref": "#/$defs/singlePortData"
				},
				"portES": {
					"$ref": "#/$defs/singlePortData"
				}
			},
			"required": [
				"portWN",
				"portES"
			]
		},
		"lastUpdate": {
			"description": "Date/time in epoch format of the last Ferry Tempo data update.",
			"type": "integer",
			"$ref": "#/$defs/epochTime"
		}
	},
	"required": [
		"boatData",
		"portData",
		"lastUpdate"
	],
	"title": "Ferry Tempo Data",
	"type": "object"
}